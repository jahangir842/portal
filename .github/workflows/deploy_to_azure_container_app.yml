# Multi-environment Azure deployment workflow
# Supports automatic deployment to dev and manual deployment to staging/production
name: Azure Deployment to Multi Environments

# Trigger conditions for the workflow
on:
  # Automatic deployment to development on main branch pushes
  push:
    branches:
      - main
  
  # Manual deployment with environment selection
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose the environment to deploy"
        required: true
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  # Development deployment job
  # Runs automatically on main branch pushes OR manual trigger for dev environment
  deploy-dev:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'development' || github.ref == 'refs/heads/main' }}
    name: Deploy to Development
    runs-on: ubuntu-latest
    environment: development  # GitHub environment for approval gates and secrets
    steps:
      # Get the source code from repository
      - name: Checkout Code
        uses: actions/checkout@v4
      
      # Authenticate with Azure using service principal credentials
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # Azure service principal JSON
      
      # Deploy container to Azure Container Apps in development environment
      - name: Deploy to Azure Container App - Dev
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ github.workspace }}  # Source code path
          acrName: ${{ secrets.AZURE_CONTAINER_REGISTRY }}  # Azure Container Registry name
          acrUsername: ${{ secrets.AZURE_REGISTRY_USERNAME }}  # ACR username
          acrPassword: ${{ secrets.AZURE_REGISTRY_PASSWORD }}  # ACR password
          containerAppName: portal-app-dev  # Development container app name
          resourceGroup: portal-rg-dev  # Development resource group
          imageToDeploy: ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/portal:${{ github.sha }}  # Image with commit SHA tag
          targetPort: 5000  # Application port

  # Staging deployment job
  # Only runs when manually triggered with staging environment selected
  deploy-staging:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging' }}
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment: staging  # Staging environment protection rules apply
    steps:
      # Get the source code from repository
      - uses: actions/checkout@v4
      
      # Authenticate with Azure using service principal credentials
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # Deploy container to Azure Container Apps in staging environment
      - name: Deploy to Azure Container App - Staging
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ github.workspace }}
          acrName: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
          acrUsername: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          acrPassword: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
          containerAppName: portal-app-staging  # Staging container app name
          resourceGroup: portal-rg-staging  # Staging resource group
          imageToDeploy: ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/portal:${{ github.sha }}
          targetPort: 5000

  # Production deployment job
  # Only runs when manually triggered with production environment selected
  # Should have additional approval requirements configured in GitHub environment settings
  deploy-prod:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production' }}
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production  # Production environment with strict protection rules
    steps:
      # Get the source code from repository
      - uses: actions/checkout@v4
      
      # Authenticate with Azure using service principal credentials
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # Deploy container to Azure Container Apps in production environment
      - name: Deploy to Azure Container App - Production
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ github.workspace }}
          acrName: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
          acrUsername: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          acrPassword: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
          containerAppName: portal-app-prod  # Production container app name
          resourceGroup: portal-rg-prod  # Production resource group
          imageToDeploy: ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/portal:${{ github.sha }}
          targetPort: 5000
