name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Pytest
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: pytest --junitxml=pytest-report.xml

  build_and_push:
    name: Build and Push Docker Image to ACR
    needs: test
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Log in to Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Log in to ACR
      - name: Log in to Azure Container Registry (ACR)
        run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

      # Build Docker Image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ secrets.IMAGE_NAME }}:${{ github.sha }} .

      # Push Docker Image to ACR
      - name: Push Docker image to ACR
        run: |
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ secrets.IMAGE_NAME }}:${{ github.sha }}

      # Verify the pushed image
      - name: Verify Image in ACR
        run: |
          az acr repository show-tags --name ${{ secrets.AZURE_CONTAINER_REGISTRY }} --repository ${{ secrets.IMAGE_NAME }} --output table

  security_scan:
    name: Trivy Security Scan
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/portal:latest
